version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: angora_db
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3307:3306" 
    networks:
      - angora-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-container
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/angora_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SECURITY_JWT_KEY_PRIVATE: ${SECURITY_JWT_KEY_PRIVATE}
      SECURITY_JWT_USER_GENERATOR: ${SECURITY_JWT_USER_GENERATOR}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: always
    networks:
      - angora-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    environment:
      VITE_API_URL: ${VITE_API_URL}
    depends_on:
      - backend
    ports:
      - "5173:80"
    restart: always
    networks:
      - angora-network

volumes:
  mysql_data:

networks:
  angora-network:
    driver: bridge